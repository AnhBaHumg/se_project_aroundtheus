!function(){"use strict";class e{constructor(e,t,s,r,i){this._name=e.name,this._link=e.link,this._cardID=e.cardID,this._id=e._id,this._isLiked=e.isLiked,this._cardSelector=t,this._handleImageClick=s,this._handleDeleteSubmit=r,this._handleLikeClick=i}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleLikeClick(this)})),this._cardTrash.addEventListener("click",(()=>{this._handleDeleteSubmit(this._id,this)})),this._cardImageEl.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}isLiked(){return this.isLiked}_setLikes(){this._isLiked?this._likeButton.classList.add("card__like-button-active"):this._likeButton.classList.remove("card__like-button-active")}handleDeleteSubmit(){const e=this.cardData;handleDeleteButton(e)}handleLikeIcon=()=>{this._likeButton.classList.toggle("card__like-button-active")};handleDeleteCard=()=>{this._element.remove(),this._element=null};getView(){return this._element=this._getTemplate(),this._likeButton=this._element.querySelector(".card__like-button"),this._cardTrash=this._element.querySelector(".card__trash-button"),this._cardImageEl=this._element.querySelector(".card__image"),this._cardImageEl.src=this._link,this._cardImageEl.alt=`Photo of ${this._name}`,this._element.querySelector(".card__name").textContent=this._name,this._setLikes(),this._setEventListeners(),this._element}getID(){return this._id()}}class t{constructor(e,t){this._formEl=e,this._formSelector=t.formSelector,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._submitButton=this._formEl.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}_checkValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}changeButtonState(){let e=!1;this._inputElements.forEach((t=>{t.validity.valid||(e=!0)})),e?this._disableButton():(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_setEventListeners(){this._inputElements=Array.from(this._formEl.querySelectorAll(this._inputSelector)),this._inputElements.forEach((e=>{e.addEventListener("input",(t=>{this._checkValidity(e),this.changeButtonState()}))}))}enableValidation(){this._formEl.addEventListener("submit",(e=>{e.preventDefault(),this._disableButton()})),this._setEventListeners()}}class s{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("modal")||e.target.classList.contains("modal__close"))&&this.close()}))}}class r extends s{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputEls=[...this._popupForm.querySelectorAll(".modal__input")],this._submitButton=this._popupForm.querySelector(".modal__button"),this._submitButtonText=this._submitButton.textContent}setEventListeners(){this._popupElement.addEventListener("submit",(()=>{this._handleFormSubmit(this._getInputValues())})),super.setEventListeners()}close(){this._popupForm.reset(),super.close()}_getInputValues(){const e={};return this._inputEls.forEach((t=>{e[t.name]=t.value})),e}setLoading(e){this._submitButton.textContent=e?"loading...":this._submitButtonText}renderLoading(){const e=document.createElement("img");return e.src=imageSrc,e}loadImage(){this.image=image,this._popupForm.append(image)}}class i{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(`.${t}`)}renderItems(){this._items.forEach(this._renderer)}addItem(e){this._container.prepend(e)}}const o={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},n=document.querySelector("#add-card-modal").querySelector(".modal__form"),a=document.querySelector("#profile-edit-modal"),l={cardListEl:document.querySelector(".cards__list"),addCardForm:document.querySelector("#add-card-form"),profileEditButton:document.querySelector("#profile-edit-button"),profileCloseButton:"#profile-close-button",addCardCloseButton:"#addcard-close-button",profileTitle:document.querySelector(".profile__title"),profileDescription:document.querySelector(".profile__description"),addNewCardButton:document.querySelector(".profile__add-button"),profileTitleInput:document.querySelector("#profile-title-input"),profileDescriptionInput:document.querySelector("#profile-description-input"),cardTitleInput:"#title-card-input",cardUrlInput:"#url-image-input",popupModal:document.querySelector("#image-popup"),popupImage:"#modal-image-popup",popupTitle:"#modal-title-popup",popupImageModalClose:document.querySelector("#image-popup-close-button"),deleteCardPopup:"#delete-card-modal"},d=new class{constructor(e){let{headers:t,baseUrl:s}=e;this.baseUrl=s,this.headers=t}_checkResponse(e){if(!e.ok)throw console.error(`HTTP error! Status: ${e.status}, Text: ${e.statusText}`),new Error(`HTTP error! Status: ${e.status}, Text: ${e.statusText}`);return e.json()}_request(e,t){return fetch(e,t).then(this._checkResponse)}getInitialCards(){return this._request(`${this.baseUrl}/cards`,{headers:this.headers})}addNewCard(e){return this._request(`${this.baseUrl}/cards`,{method:"POST",headers:this.headers,body:JSON.stringify(e)})}deleteCard(e){return this._request(`${this.baseUrl}/cards/${e}`,{method:"DELETE",headers:this.headers})}likeCard=e=>this._request(`${this.baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this.headers});removeLike(e){return this._request(`${this.baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this.headers})}getUserInfo(){return this._request(`${this.baseUrl}/users/me`,{headers:this.headers})}editUserInfo(e){return this._request(`${this.baseUrl}/users/me`,{method:"PATCH",headers:this.headers,body:JSON.stringify({name:e.name,about:e.description})})}updateAvatar(e){return this._request(`${this.baseUrl}/users/me/avatar`,{method:"PATCH",headers:this.headers,body:JSON.stringify({avatar:e})})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"a5172d76-7206-4bb6-b609-2e8e17b83724","Content-Type":"application/json"}});function c(e){E.open(e)}function u(t){return new e(t,"#card-template",c,v,_).getView()}const h=new t(a,o),p=new t(n,o);function _(e){e.isLiked?d.removeLike(e._id).then((()=>{e.handleLikeIcon()})).catch((e=>console.error(e))):d.likeCard(e._id).then((()=>{e.handleLikeIcon()})).catch((e=>console.error(e)))}h.enableValidation(),p.enableValidation();const m=new r("#profile-edit-modal",(function(e){m.setLoading(!0),d.editUserInfo(e).then((()=>{S.setUserInfo(e.name,e.description),m.close()})).catch((e=>{console.error(e)})).finally((()=>{m.setLoading(!1)}))}));m.setEventListeners(),l.profileEditButton.addEventListener("click",(function(){const e=S.getUserInfo();l.profileTitleInput.value=e.name,l.profileDescriptionInput.value=e.description,m.open()})),l.addNewCardButton.addEventListener("click",(function(){g.open()}));const E=new class extends s{constructor(e){super({popupSelector:e}),this._popupImage=this._popupElement.querySelector(".modal__image-popup"),this._popupTitle=this._popupElement.querySelector(".modal__title-popup")}open(e){let{name:t,link:s}=e;this._popupImage.src=s,this._popupImage.alt=t,this._popupTitle.textContent=t,super.open()}}("#image-popup");let f;E.setEventListeners(),d.getInitialCards().then((e=>{f=new i({items:e,renderer:e=>{const t=u(e);f.addItem(t)}},"cards__list"),f.renderItems()})).catch((e=>{console.error(e)})),d.getUserInfo().then((e=>{S.setUserInfo(e.name,e.description),S.setAvatar(e.avatar)})).catch((e=>{console.error(e)}));const S=new class{constructor(e,t,s){this._titleElement=document.querySelector(e),this._descriptionElement=document.querySelector(t),this._avatarElement=document.querySelector(s)}getUserInfo(){return{name:this._titleElement.textContent,description:this._descriptionElement.textContent}}setUserInfo(e,t){this._titleElement.textContent=e,this._descriptionElement.textContent=t}setAvatar(e){this._avatarElement.src=e}}(".profile__title",".profile__description",".profile__image"),b=new class extends s{constructor(e){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form")}setSubmitAction(e){this._handleFormSubmit=e}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit()}))}}("#delete-card-modal");function v(e,t){b.open(),b.setSubmitAction((()=>{d.deleteCard(e).then((()=>{t.handleDeleteCard(),b.close()})).catch((e=>{console.log(e)})).finally((()=>{}))}))}b.setEventListeners();const L=new r("#profile-image-modal",(e=>{L.setLoading(!0),d.updateAvatar(e.link).then((e=>{S.setAvatar(e.avatar),L.close()})).catch((e=>{console.error(e)})).finally((()=>{L.setLoading(!1)}))}));document.querySelector("#avatar-edit-button").addEventListener("click",(()=>{L.open()})),L.setEventListeners();const g=new r("#add-card-modal",(function(e){g.setLoading(!0),d.addNewCard(e).then((e=>{u(e),l.addCardForm.reset(),p.changeButtonState(),g.close()})).catch((e=>{console.error(e)})).finally((()=>{g.setLoading(!1)}))}));g.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,