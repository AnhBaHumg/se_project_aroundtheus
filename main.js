!function(){"use strict";class e{constructor(e,t,s){this._name=e.name,this._link=e.link,this._cardSelector=t,this._handleImageClick=s}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._likeButton.addEventListener("click",this._handleLikeIcon),this._cardTrash.addEventListener("click",this._handleDeleteCard),this._cardImageEl.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}_handleLikeIcon=()=>{this._likeButton.classList.toggle("card__like-button-active")};_handleDeleteCard=()=>{this._element.remove(),this._element=null};getView(){return this._element=this._getTemplate(),this._likeButton=this._element.querySelector(".card__like-button"),this._cardTrash=this._element.querySelector(".card__trash-button"),this._cardImageEl=this._element.querySelector(".card__image"),this._cardImageEl.src=this._link,this._cardImageEl.alt=`Photo of ${this._name}`,this._element.querySelector(".card__name").textContent=this._name,this._setEventListeners(),this._element}}class t{constructor(e,t){this._formEl=e,this._formSelector=t.formSelector,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._submitButton=this._formEl.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}_checkValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}changeButtonState(){let e=!1;this._inputElements.forEach((t=>{t.validity.valid||(e=!0)})),e?this._disableButton():(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_setEventListeners(){this._inputElements=Array.from(this._formEl.querySelectorAll(this._inputSelector)),this._inputElements.forEach((e=>{e.addEventListener("input",(t=>{this._checkValidity(e),this.changeButtonState()}))}))}enableValidation(){this._formEl.addEventListener("submit",(e=>{e.preventDefault(),this._disableButton()})),this._setEventListeners()}}class s{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("click",(e=>{(e.target.classList.contains("modal")||e.target.classList.contains("modal__close"))&&this.close()}))}}class o extends s{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputEls=[...this._popupForm.querySelectorAll(".modal__input")]}setEventListeners(){this._popupElement.addEventListener("submit",(()=>{this._handleFormSubmit(this._getInputValues())})),super.setEventListeners()}_getInputValues(){const e={};return this._inputEls.forEach((t=>{e[t.name]=t.value})),e}}const n={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},i=document.querySelector("#add-card-modal").querySelector(".modal__form"),r=document.querySelector("#profile-edit-modal"),l={cardListEl:document.querySelector(".cards__list"),addCardForm:document.querySelector("#add-card-form"),profileEditButton:document.querySelector("#profile-edit-button"),profileCloseButton:"#profile-close-button",addCardCloseButton:"#addcard-close-button",profileTitle:document.querySelector(".profile__title"),profileDescription:document.querySelector(".profile__description"),addNewCardButton:document.querySelector(".profile__add-button"),profileTitleInput:document.querySelector("#profile-title-input"),profileDescriptionInput:document.querySelector("#profile-description-input"),cardTitleInput:"#title-card-input",cardUrlInput:"#url-image-input",popupModal:document.querySelector("#image-popup"),popupImage:"#modal-image-popup",popupTitle:"#modal-title-popup",popupImageModalClose:document.querySelector("#image-popup-close-button")};function a(e){_.open(e)}function c(t){const s=new e(t,"#card-template",a).getView();h.addItem(s)}const u=new t(r,n),d=new t(i,n);u.enableValidation(),d.enableValidation();const p=new o("#add-card-modal",(function(e){c(e),l.addCardForm.reset(),d.changeButtonState(),p.close()}));p.setEventListeners();const m=new o("#profile-edit-modal",(function(e){E.setUserInfo(e.name,e.description),m.close()}));m.setEventListeners(),l.profileEditButton.addEventListener("click",(function(){const e=E.getUserInfo();l.profileTitleInput.value=e.name,l.profileDescriptionInput.value=e.description,m.open()})),l.addNewCardButton.addEventListener("click",(function(){p.open()}));const _=new class extends s{constructor(e){super({popupSelector:e}),this._popupImage=this._popupElement.querySelector(".modal__image-popup"),this._popupTitle=this._popupElement.querySelector(".modal__title-popup")}open(e){let{name:t,link:s}=e;this._popupImage.src=s,this._popupImage.alt=t,this._popupTitle.textContent=t,super.open()}}("#image-popup");_.setEventListeners();const h=new class{constructor(e,t){let{items:s,renderer:o}=e;this._items=s,this._renderer=o,this._container=document.querySelector(`.${t}`)}renderItems(){this._items.forEach(this._renderer)}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>{c(e)}},"cards__list");h.renderItems();const E=new class{constructor(e,t){this._titleElement=document.querySelector(e),this._descriptionElement=document.querySelector(t)}getUserInfo(){return{name:this._titleElement.textContent,description:this._descriptionElement.textContent}}setUserInfo(e,t){this._titleElement.textContent=e,this._descriptionElement.textContent=t}}(".profile__title",".profile__description")}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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eEIsRUFDakNGLEtBQUt1SSxvQkFBb0I3RyxZQUFjOEYsQ0FDM0MsR0gyRTBCLGtCQUFtQix3QiIsInNvdXJjZXMiOlsid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL0NhcmQuLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvdXRpbHMvY29uc3RhbnRzLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9wYWdlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIENhcmQge1xyXG4gIGNvbnN0cnVjdG9yKGRhdGEsIGNhcmRTZWxlY3RvciwgaGFuZGxlSW1hZ2VDbGljaykge1xyXG4gICAgdGhpcy5fbmFtZSA9IGRhdGEubmFtZTtcclxuICAgIHRoaXMuX2xpbmsgPSBkYXRhLmxpbms7XHJcbiAgICB0aGlzLl9jYXJkU2VsZWN0b3IgPSBjYXJkU2VsZWN0b3I7XHJcbiAgICB0aGlzLl9oYW5kbGVJbWFnZUNsaWNrID0gaGFuZGxlSW1hZ2VDbGljaztcclxuICB9XHJcblxyXG4gIF9nZXRUZW1wbGF0ZSgpIHtcclxuICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gZG9jdW1lbnRcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IodGhpcy5fY2FyZFNlbGVjdG9yKVxyXG4gICAgICAuY29udGVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRcIilcclxuICAgICAgLmNsb25lTm9kZSh0cnVlKTtcclxuICAgIHJldHVybiBjYXJkRWxlbWVudDtcclxuICB9XHJcblxyXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIC8vLmNhcmRfX2xpa2UtYnV0dG9uXHJcbiAgICB0aGlzLl9saWtlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLl9oYW5kbGVMaWtlSWNvbik7XHJcblxyXG4gICAgLy8uY2FyZF9fdHJhc2gtYnV0dG9uXHJcbiAgICB0aGlzLl9jYXJkVHJhc2guYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMuX2hhbmRsZURlbGV0ZUNhcmQpO1xyXG5cclxuICAgIC8vLmNhcmRfX2ltYWdlXHJcbiAgICB0aGlzLl9jYXJkSW1hZ2VFbC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICB0aGlzLl9oYW5kbGVJbWFnZUNsaWNrKHsgbmFtZTogdGhpcy5fbmFtZSwgbGluazogdGhpcy5fbGluayB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgX2hhbmRsZUxpa2VJY29uID0gKCkgPT4ge1xyXG4gICAgdGhpcy5fbGlrZUJ1dHRvbi5jbGFzc0xpc3QudG9nZ2xlKFwiY2FyZF9fbGlrZS1idXR0b24tYWN0aXZlXCIpO1xyXG4gIH07XHJcbiAgX2hhbmRsZURlbGV0ZUNhcmQgPSAoKSA9PiB7XHJcbiAgICB0aGlzLl9lbGVtZW50LnJlbW92ZSgpO1xyXG4gICAgdGhpcy5fZWxlbWVudCA9IG51bGw7XHJcbiAgfVxyXG5cclxuICBnZXRWaWV3KCkge1xyXG4gICAgdGhpcy5fZWxlbWVudCA9IHRoaXMuX2dldFRlbXBsYXRlKCk7XHJcbiAgICB0aGlzLl9saWtlQnV0dG9uID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2xpa2UtYnV0dG9uXCIpO1xyXG4gICAgdGhpcy5fY2FyZFRyYXNoID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX3RyYXNoLWJ1dHRvblwiKTtcclxuICAgIHRoaXMuX2NhcmRJbWFnZUVsID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2ltYWdlXCIpO1xyXG4gICAgLy9nZXQgdGhlIGNhcmQgdmlld1xyXG4gICAgXHJcbiAgICB0aGlzLl9jYXJkSW1hZ2VFbC5zcmMgPSB0aGlzLl9saW5rO1xyXG4gICAgdGhpcy5fY2FyZEltYWdlRWwuYWx0ID0gYFBob3RvIG9mICR7dGhpcy5fbmFtZX1gO1xyXG4gICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX25hbWVcIikudGV4dENvbnRlbnQgPSB0aGlzLl9uYW1lO1xyXG4gICAgLy9zZXQgZXZlbnQgbGlzdGVuZXJzXHJcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgLy9yZXR1cm4gdGhlIGNhcmRcclxuICAgIHJldHVybiB0aGlzLl9lbGVtZW50O1xyXG4gIH1cclxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEZvcm1WYWxpZGF0b3Ige1xyXG4gICAgY29uc3RydWN0b3IoZm9ybUVsLCBjb25maWcpIHtcclxuICAgICAgdGhpcy5fZm9ybUVsID0gZm9ybUVsO1xyXG4gICAgICB0aGlzLl9mb3JtU2VsZWN0b3IgPSBjb25maWcuZm9ybVNlbGVjdG9yO1xyXG4gICAgICB0aGlzLl9pbnB1dFNlbGVjdG9yID0gY29uZmlnLmlucHV0U2VsZWN0b3I7XHJcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yID0gY29uZmlnLnN1Ym1pdEJ1dHRvblNlbGVjdG9yO1xyXG4gICAgICB0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzID0gY29uZmlnLmluYWN0aXZlQnV0dG9uQ2xhc3M7XHJcbiAgICAgIHRoaXMuX2lucHV0RXJyb3JDbGFzcyA9IGNvbmZpZy5pbnB1dEVycm9yQ2xhc3M7XHJcbiAgICAgIHRoaXMuX2Vycm9yQ2xhc3MgPSBjb25maWcuZXJyb3JDbGFzcztcclxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uID0gdGhpcy5fZm9ybUVsLnF1ZXJ5U2VsZWN0b3IodGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBfc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50KSB7XHJcbiAgICAgICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybUVsLnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTtcclxuICAgICAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpOyBcclxuICAgICAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBpbnB1dEVsZW1lbnQudmFsaWRhdGlvbk1lc3NhZ2U7IFxyXG4gICAgICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2Vycm9yQ2xhc3MpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBfaGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KSB7XHJcbiAgICAgICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybUVsLnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTtcclxuICAgICAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpOyBcclxuICAgICAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9lcnJvckNsYXNzKTsgXHJcbiAgICAgICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gJyc7IFxyXG4gICAgfVxyXG4gICAgXHJcbiAgICBfY2hlY2tWYWxpZGl0eShpbnB1dEVsZW1lbnQpIHtcclxuICAgICAgICBpZiAoIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZCkge1xyXG4gICAgICAgICAgICB0aGlzLl9zaG93SW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICBfZGlzYWJsZUJ1dHRvbigpIHtcclxuICAgICAgICB0aGlzLl9zdWJtaXRCdXR0b24uY2xhc3NMaXN0LmFkZCh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgICAgICB0aGlzLl9zdWJtaXRCdXR0b24uZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBjaGFuZ2VCdXR0b25TdGF0ZSgpIHtcclxuICAgICAgICBsZXQgZm91bmRJbnZhbGlkID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5faW5wdXRFbGVtZW50cy5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgICAgICAgICAgaWYgKCFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpIHtcclxuICAgICAgICAgICAgICAgIGZvdW5kSW52YWxpZCA9IHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICBcclxuICAgICAgICBpZiAoZm91bmRJbnZhbGlkKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2Rpc2FibGVCdXR0b24oKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLl9zdWJtaXRCdXR0b24uY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgICAgICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICBcclxuICAgIF9zZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgICAgICB0aGlzLl9pbnB1dEVsZW1lbnRzID0gQXJyYXkuZnJvbSh0aGlzLl9mb3JtRWwucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9pbnB1dFNlbGVjdG9yKSk7XHJcbiAgICAgICAgdGhpcy5faW5wdXRFbGVtZW50cy5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgICAgICAgICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoZXZlbnQpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2NoZWNrVmFsaWRpdHkoaW5wdXRFbGVtZW50KTtcclxuICAgICAgICAgICAgICAgIHRoaXMuY2hhbmdlQnV0dG9uU3RhdGUoKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGVuYWJsZVZhbGlkYXRpb24oKSB7XHJcbiAgICAgICAgdGhpcy5fZm9ybUVsLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgIHRoaXMuX2Rpc2FibGVCdXR0b24oKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgfVxyXG59IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXAge1xyXG4gICAgY29uc3RydWN0b3IoeyBwb3B1cFNlbGVjdG9yfSkge1xyXG4gICAgICAgIHRoaXMuX3BvcHVwRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBTZWxlY3Rvcik7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIG9wZW4oKSB7XHJcbiAgICAgICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJtb2RhbF9vcGVuZWRcIik7XHJcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xyXG4gICAgfVxyXG5cclxuICAgIGNsb3NlKCkge1xyXG4gICAgICAgIHRoaXMuX3BvcHVwRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKFwibW9kYWxfb3BlbmVkXCIpO1xyXG4gICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcclxuICAgIH1cclxuXHJcbiAgICBfaGFuZGxlRXNjQ2xvc2UgPSAoZXZ0KSA9PiB7XHJcbiAgICAgICAgaWYgKGV2dC5rZXkgPT09IFwiRXNjYXBlXCIpIHtcclxuICAgICAgICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICAgICAgdGhpcy5fcG9wdXBFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZ0KSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcIm1vZGFsXCIpIHx8XHJcbiAgICAgICAgICAgIGV2dC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwibW9kYWxfX2Nsb3NlXCIpKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxufSIsImltcG9ydCBQb3B1cCBmcm9tICcuL1BvcHVwJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XHJcbiAgICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCBoYW5kbGVGb3JtU3VibWl0KSB7XHJcbiAgICAgICAgc3VwZXIoeyBwb3B1cFNlbGVjdG9yIH0pO1xyXG4gICAgICAgIHRoaXMuX3BvcHVwRm9ybSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19mb3JtXCIpO1xyXG4gICAgICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQgPSBoYW5kbGVGb3JtU3VibWl0O1xyXG4gICAgICAgIHRoaXMuX2lucHV0RWxzID0gWy4uLnRoaXMuX3BvcHVwRm9ybS5xdWVyeVNlbGVjdG9yQWxsKFwiLm1vZGFsX19pbnB1dFwiKV07XHJcbiAgICB9XHJcbiAgICBcclxuICAgIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgICAgIHRoaXMuX3BvcHVwRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsICgpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCh0aGlzLl9nZXRJbnB1dFZhbHVlcygpKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XHJcbiAgICAgICAgY29uc3QgaW5wdXRWYWx1ZXMgPSB7fTtcclxuICAgICAgICB0aGlzLl9pbnB1dEVscy5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgICAgICAgIGlucHV0VmFsdWVzW2lucHV0RWxlbWVudC5uYW1lXSA9IGlucHV0RWxlbWVudC52YWx1ZTtcclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm4gaW5wdXRWYWx1ZXM7XHJcbiAgICB9XHJcbn0iLCJleHBvcnQgY29uc3QgaW5pdGlhbENhcmRzID0gW1xyXG4gICAge1xyXG4gICAgICBuYW1lOiBcIllvc2VtaXRlIFZhbGxleVwiLFxyXG4gICAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QveW9zZW1pdGUuanBnXCIsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBuYW1lOiBcIkxha2UgTG91aXNlXCIsXHJcbiAgICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9sYWtlLWxvdWlzZS5qcGdcIixcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIG5hbWU6IFwiQmFsZCBNb3VudGFpbnNcIixcclxuICAgICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L2JhbGQtbW91bnRhaW5zLmpwZ1wiLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgbmFtZTogXCJMYXRlbWFyXCIsXHJcbiAgICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9sYXRlbWFyLmpwZ1wiLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgbmFtZTogXCJWYW5vaXNlIE5hdGlvbmFsIFBhcmtcIixcclxuICAgICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L3Zhbm9pc2UuanBnXCIsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBuYW1lOiBcIkxhZ28gZGkgQnJhaWVzXCIsXHJcbiAgICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9sYWdvLmpwZ1wiLFxyXG4gICAgfSxcclxuXTtcclxuXHJcbmV4cG9ydCBjb25zdCBjb25maWcgPSB7XHJcbiAgICBmb3JtU2VsZWN0b3I6IFwiLm1vZGFsX19mb3JtXCIsXHJcbiAgICBpbnB1dFNlbGVjdG9yOiBcIi5tb2RhbF9faW5wdXRcIixcclxuICAgIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiBcIi5tb2RhbF9fYnV0dG9uXCIsXHJcbiAgICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcIm1vZGFsX19idXR0b25fZGlzYWJsZWRcIixcclxuICAgIGlucHV0RXJyb3JDbGFzczogXCJtb2RhbF9faW5wdXRfdHlwZV9lcnJvclwiLFxyXG4gICAgZXJyb3JDbGFzczogXCJtb2RhbF9fZXJyb3JfdmlzaWJsZVwiLFxyXG59O1xyXG5leHBvcnQgY29uc3QgYWRkQ2FyZE1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhZGQtY2FyZC1tb2RhbFwiKTtcclxuZXhwb3J0IGNvbnN0IGNhcmRGb3JtID0gYWRkQ2FyZE1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Zvcm1cIik7XHJcbmV4cG9ydCBjb25zdCBwcm9maWxlRWRpdE1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlLWVkaXQtbW9kYWxcIik7XHJcbmV4cG9ydCBjb25zdCB2YXJpYWJsZSA9IHtcclxuLy9XcmFwcGVyc1xyXG5jYXJkTGlzdEVsOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRzX19saXN0XCIpLFxyXG5hZGRDYXJkRm9ybTogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhZGQtY2FyZC1mb3JtXCIpLFxyXG5cclxuXHJcblxyXG5cclxuLy9CdXR0b25zIGFuZCBvdGhlciBEb20gbm9kZXNcclxucHJvZmlsZUVkaXRCdXR0b246IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZS1lZGl0LWJ1dHRvblwiKSxcclxucHJvZmlsZUNsb3NlQnV0dG9uOiBcIiNwcm9maWxlLWNsb3NlLWJ1dHRvblwiLFxyXG5hZGRDYXJkQ2xvc2VCdXR0b246IFwiI2FkZGNhcmQtY2xvc2UtYnV0dG9uXCIsXHJcbnByb2ZpbGVUaXRsZTogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX190aXRsZVwiKSxcclxucHJvZmlsZURlc2NyaXB0aW9uOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2Rlc2NyaXB0aW9uXCIpLFxyXG5hZGROZXdDYXJkQnV0dG9uOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2FkZC1idXR0b25cIiksXHJcblxyXG4vL0Zvcm0gZGF0YVxyXG5wcm9maWxlVGl0bGVJbnB1dDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlLXRpdGxlLWlucHV0XCIpLFxyXG5wcm9maWxlRGVzY3JpcHRpb25JbnB1dDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlLWRlc2NyaXB0aW9uLWlucHV0XCIpLFxyXG5cclxuY2FyZFRpdGxlSW5wdXQ6IFwiI3RpdGxlLWNhcmQtaW5wdXRcIixcclxuY2FyZFVybElucHV0OiBcIiN1cmwtaW1hZ2UtaW5wdXRcIixcclxuXHJcbi8vSW1tYWdlIHBvcHVwXHJcbnBvcHVwTW9kYWw6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjaW1hZ2UtcG9wdXBcIiksXHJcbnBvcHVwSW1hZ2U6IFwiI21vZGFsLWltYWdlLXBvcHVwXCIsXHJcbnBvcHVwVGl0bGU6IFwiI21vZGFsLXRpdGxlLXBvcHVwXCIsXHJcbnBvcHVwSW1hZ2VNb2RhbENsb3NlOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2ltYWdlLXBvcHVwLWNsb3NlLWJ1dHRvblwiKSxcclxuXHJcbn0iLCJpbXBvcnQgQ2FyZCBmcm9tIFwiLi4vY29tcG9uZW50cy9DYXJkLi5qc1wiO1xyXG5pbXBvcnQgRm9ybVZhbGlkYXRvciBmcm9tIFwiLi4vY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzXCI7XHJcbmltcG9ydCBcIi4uL3BhZ2VzL2luZGV4LmNzc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xyXG5pbXBvcnQgVXNlckluZm8gZnJvbSBcIi4uL2NvbXBvbmVudHMvVXNlckluZm8uanNcIjtcclxuaW1wb3J0IFNlY3Rpb24gZnJvbSBcIi4uL2NvbXBvbmVudHMvU2VjdGlvbi5qc1wiO1xyXG5pbXBvcnQge1xyXG4gIGluaXRpYWxDYXJkcyxcclxuICBjb25maWcsXHJcbiAgdmFyaWFibGUsXHJcbiAgY2FyZEZvcm0sXHJcbiAgcHJvZmlsZUVkaXRNb2RhbFxyXG59IGZyb20gXCIuLi91dGlscy9jb25zdGFudHMuanNcIjtcclxuXHJcbmZ1bmN0aW9uIGhhbmRsZUltYWdlQ2xpY2soY2FyZERhdGEpIHtcclxuICBwb3B1cFdpdGhJbWFnZS5vcGVuKGNhcmREYXRhKTtcclxufVxyXG5cclxuZnVuY3Rpb24gY3JlYXRlQ2FyZChpdGVtKSB7XHJcbiAgY29uc3QgY2FyZEVsZW1lbnQgPSBuZXcgQ2FyZChpdGVtLCBcIiNjYXJkLXRlbXBsYXRlXCIsIGhhbmRsZUltYWdlQ2xpY2spO1xyXG4gIHJldHVybiBjYXJkRWxlbWVudC5nZXRWaWV3KClcclxufVxyXG5cclxuZnVuY3Rpb24gcmVuZGVyQ2FyZChjYXJkRGF0YSkge1xyXG4gIGNvbnN0IGNhcmQgPSBjcmVhdGVDYXJkKGNhcmREYXRhKTtcclxuICBzZWN0aW9uLmFkZEl0ZW0oY2FyZCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGhhbmRsZUFkZENhcmRGb3JtU3VibWl0KGlucHV0VmFsdWVzKSB7XHJcbiAgcmVuZGVyQ2FyZChpbnB1dFZhbHVlcyk7XHJcbiAgdmFyaWFibGUuYWRkQ2FyZEZvcm0ucmVzZXQoKTtcclxuICBjYXJkRm9ybUZvcm1WYWxpZGF0b3IuY2hhbmdlQnV0dG9uU3RhdGUoKTtcclxuICBjYXJkUG9wdXAuY2xvc2UoKTtcclxufVxyXG5cclxuLy9Gb3JtVmFsaWRhdG9yXHJcbmNvbnN0IHByb2ZpbGVFZGl0TW9kYWxGb3JtVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IocHJvZmlsZUVkaXRNb2RhbCxjb25maWcpO1xyXG5jb25zdCBjYXJkRm9ybUZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihjYXJkRm9ybSwgY29uZmlnKTtcclxuXHJcbnByb2ZpbGVFZGl0TW9kYWxGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuY2FyZEZvcm1Gb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuXHJcbi8vUG9wdXBXaXRoRm9ybVxyXG5cclxuY29uc3QgY2FyZFBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oXCIjYWRkLWNhcmQtbW9kYWxcIiwgaGFuZGxlQWRkQ2FyZEZvcm1TdWJtaXQpO1xyXG5cclxuZnVuY3Rpb24gb3BlbkFkZEZvcm0oKSB7XHJcbiAgY2FyZFBvcHVwLm9wZW4oKTtcclxufVxyXG5cclxuY2FyZFBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG5jb25zdCBlZGl0UG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybShcclxuICBcIiNwcm9maWxlLWVkaXQtbW9kYWxcIixcclxuICBoYW5kbGVQcm9maWxlRWRpdFN1Ym1pdFxyXG4pO1xyXG5cclxuZnVuY3Rpb24gb3BlbkVkaXRGb3JtKCkge1xyXG4gIGNvbnN0IHVzZXIgPSB1c2VySW5mby5nZXRVc2VySW5mbygpO1xyXG4gIHZhcmlhYmxlLnByb2ZpbGVUaXRsZUlucHV0LnZhbHVlID0gdXNlci5uYW1lO1xyXG4gIHZhcmlhYmxlLnByb2ZpbGVEZXNjcmlwdGlvbklucHV0LnZhbHVlID0gdXNlci5kZXNjcmlwdGlvbjtcclxuICBlZGl0UG9wdXAub3BlbigpO1xyXG59XHJcblxyXG5lZGl0UG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcblxyXG52YXJpYWJsZS5wcm9maWxlRWRpdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgb3BlbkVkaXRGb3JtKTtcclxuXHJcbnZhcmlhYmxlLmFkZE5ld0NhcmRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIG9wZW5BZGRGb3JtKTsgXHJcblxyXG4vL1BvcHVwV2l0aEltYWdlXHJcblxyXG5jb25zdCBwb3B1cFdpdGhJbWFnZSA9IG5ldyBQb3B1cFdpdGhJbWFnZShcIiNpbWFnZS1wb3B1cFwiKTtcclxucG9wdXBXaXRoSW1hZ2Uuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbi8vU2VjdGlvblxyXG5jb25zdCBzZWN0aW9uID0gbmV3IFNlY3Rpb24oXHJcbiAge1xyXG4gICAgaXRlbXM6IGluaXRpYWxDYXJkcyxcclxuICAgIHJlbmRlcmVyOiAoY2FyZERhdGEpID0+IHtcclxuICAgICAgcmVuZGVyQ2FyZChjYXJkRGF0YSk7XHJcbiAgICB9LFxyXG4gIH0sXHJcbiAgXCJjYXJkc19fbGlzdFwiXHJcbik7XHJcblxyXG5zZWN0aW9uLnJlbmRlckl0ZW1zKCk7XHJcbi8vVXNlckluZm9cclxuXHJcbmNvbnN0IHVzZXJJbmZvID0gbmV3IFVzZXJJbmZvKFwiLnByb2ZpbGVfX3RpdGxlXCIsIFwiLnByb2ZpbGVfX2Rlc2NyaXB0aW9uXCIpO1xyXG5mdW5jdGlvbiBoYW5kbGVQcm9maWxlRWRpdFN1Ym1pdChpbnB1dFZhbHVlcykge1xyXG4gIHVzZXJJbmZvLnNldFVzZXJJbmZvKGlucHV0VmFsdWVzLm5hbWUsIGlucHV0VmFsdWVzLmRlc2NyaXB0aW9uKTtcclxuICBlZGl0UG9wdXAuY2xvc2UoKTtcclxufVxyXG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xyXG4gICAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xyXG4gICAgICAgIHN1cGVyKHsgcG9wdXBTZWxlY3RvciB9KTtcclxuICAgICAgICB0aGlzLl9wb3B1cEltYWdlID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2ltYWdlLXBvcHVwXCIpO1xyXG4gICAgICAgIHRoaXMuX3BvcHVwVGl0bGUgPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fdGl0bGUtcG9wdXBcIik7XHJcbiAgICB9XHJcbiAgICBvcGVuKHsgbmFtZSwgbGluayB9KSB7XHJcbiAgICAgICAgdGhpcy5fcG9wdXBJbWFnZS5zcmMgPSBsaW5rO1xyXG4gICAgICAgIHRoaXMuX3BvcHVwSW1hZ2UuYWx0ID0gbmFtZTtcclxuICAgICAgICB0aGlzLl9wb3B1cFRpdGxlLnRleHRDb250ZW50ID0gbmFtZTtcclxuICAgICAgICBzdXBlci5vcGVuKCk7XHJcbiAgICB9XHJcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTZWN0aW9uIHtcclxuICAgIGNvbnN0cnVjdG9yKHsgaXRlbXMsIHJlbmRlcmVyIH0sIGNvbnRhaW5lclNlbGVjdG9yKSB7XHJcbiAgICAgICAgdGhpcy5faXRlbXMgPSBpdGVtcztcclxuICAgICAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xyXG4gICAgICAgIHRoaXMuX2NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC4ke2NvbnRhaW5lclNlbGVjdG9yfWApO1xyXG4gICAgfVxyXG4gICAgcmVuZGVySXRlbXMoKSB7XHJcbiAgICAgICAgdGhpcy5faXRlbXMuZm9yRWFjaCh0aGlzLl9yZW5kZXJlcik7XHJcbiAgICB9XHJcbiAgXHJcbiAgICBhZGRJdGVtKGVsZW1lbnQpIHtcclxuICAgICAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChlbGVtZW50KTtcclxuICAgIH1cclxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJJbmZvIHtcclxuICAgIGNvbnN0cnVjdG9yKHByb2ZpbGVUaXRsZSwgcHJvZmlsZURlc2NyaXB0aW9uKSB7XHJcbiAgICAgICAgdGhpcy5fdGl0bGVFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwcm9maWxlVGl0bGUpO1xyXG4gICAgICAgIHRoaXMuX2Rlc2NyaXB0aW9uRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocHJvZmlsZURlc2NyaXB0aW9uKTtcclxuICAgIH1cclxuICBcclxuICAgIGdldFVzZXJJbmZvKCkge1xyXG4gICAgICAgIGNvbnN0IHVzZXJJbmZvID0ge1xyXG4gICAgICAgICAgICBuYW1lOiB0aGlzLl90aXRsZUVsZW1lbnQudGV4dENvbnRlbnQsXHJcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiB0aGlzLl9kZXNjcmlwdGlvbkVsZW1lbnQudGV4dENvbnRlbnQsXHJcbiAgICAgICAgfTtcclxuICAgICAgICByZXR1cm4gdXNlckluZm87XHJcbiAgICB9XHJcbiAgICBzZXRVc2VySW5mbyhuYW1lLCBkZXNjcmlwdGlvbikge1xyXG4gICAgICAgIHRoaXMuX3RpdGxlRWxlbWVudC50ZXh0Q29udGVudCA9IG5hbWU7XHJcbiAgICAgICAgdGhpcy5fZGVzY3JpcHRpb25FbGVtZW50LnRleHRDb250ZW50ID0gZGVzY3JpcHRpb247XHJcbiAgICB9XHJcbn0iXSwibmFtZXMiOlsiQ2FyZCIsImNvbnN0cnVjdG9yIiwiZGF0YSIsImNhcmRTZWxlY3RvciIsImhhbmRsZUltYWdlQ2xpY2siLCJ0aGlzIiwiX25hbWUiLCJuYW1lIiwiX2xpbmsiLCJsaW5rIiwiX2NhcmRTZWxlY3RvciIsIl9oYW5kbGVJbWFnZUNsaWNrIiwiX2dldFRlbXBsYXRlIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiY29udGVudCIsImNsb25lTm9kZSIsIl9zZXRFdmVudExpc3RlbmVycyIsIl9saWtlQnV0dG9uIiwiYWRkRXZlbnRMaXN0ZW5lciIsIl9oYW5kbGVMaWtlSWNvbiIsIl9jYXJkVHJhc2giLCJfaGFuZGxlRGVsZXRlQ2FyZCIsIl9jYXJkSW1hZ2VFbCIsImNsYXNzTGlzdCIsInRvZ2dsZSIsIl9lbGVtZW50IiwicmVtb3ZlIiwiZ2V0VmlldyIsInNyYyIsImFsdCIsInRleHRDb250ZW50IiwiRm9ybVZhbGlkYXRvciIsImZvcm1FbCIsImNvbmZpZyIsIl9mb3JtRWwiLCJfZm9ybVNlbGVjdG9yIiwiZm9ybVNlbGVjdG9yIiwiX2lucHV0U2VsZWN0b3IiLCJpbnB1dFNlbGVjdG9yIiwiX3N1Ym1pdEJ1dHRvblNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJfaW5hY3RpdmVCdXR0b25DbGFzcyIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJfaW5wdXRFcnJvckNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiX2Vycm9yQ2xhc3MiLCJlcnJvckNsYXNzIiwiX3N1Ym1pdEJ1dHRvbiIsIl9zaG93SW5wdXRFcnJvciIsImlucHV0RWxlbWVudCIsImVycm9yRWxlbWVudCIsImlkIiwiYWRkIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJfaGlkZUlucHV0RXJyb3IiLCJfY2hlY2tWYWxpZGl0eSIsInZhbGlkaXR5IiwidmFsaWQiLCJfZGlzYWJsZUJ1dHRvbiIsImRpc2FibGVkIiwiY2hhbmdlQnV0dG9uU3RhdGUiLCJmb3VuZEludmFsaWQiLCJfaW5wdXRFbGVtZW50cyIsImZvckVhY2giLCJBcnJheSIsImZyb20iLCJxdWVyeVNlbGVjdG9yQWxsIiwiZXZlbnQiLCJlbmFibGVWYWxpZGF0aW9uIiwicHJldmVudERlZmF1bHQiLCJQb3B1cCIsIl9yZWYiLCJwb3B1cFNlbGVjdG9yIiwiX3BvcHVwRWxlbWVudCIsIm9wZW4iLCJfaGFuZGxlRXNjQ2xvc2UiLCJjbG9zZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJldnQiLCJrZXkiLCJzZXRFdmVudExpc3RlbmVycyIsInRhcmdldCIsImNvbnRhaW5zIiwiUG9wdXBXaXRoRm9ybSIsImhhbmRsZUZvcm1TdWJtaXQiLCJzdXBlciIsIl9wb3B1cEZvcm0iLCJfaGFuZGxlRm9ybVN1Ym1pdCIsIl9pbnB1dEVscyIsIl9nZXRJbnB1dFZhbHVlcyIsImlucHV0VmFsdWVzIiwidmFsdWUiLCJjYXJkRm9ybSIsInByb2ZpbGVFZGl0TW9kYWwiLCJ2YXJpYWJsZSIsImNhcmRMaXN0RWwiLCJhZGRDYXJkRm9ybSIsInByb2ZpbGVFZGl0QnV0dG9uIiwicHJvZmlsZUNsb3NlQnV0dG9uIiwiYWRkQ2FyZENsb3NlQnV0dG9uIiwicHJvZmlsZVRpdGxlIiwicHJvZmlsZURlc2NyaXB0aW9uIiwiYWRkTmV3Q2FyZEJ1dHRvbiIsInByb2ZpbGVUaXRsZUlucHV0IiwicHJvZmlsZURlc2NyaXB0aW9uSW5wdXQiLCJjYXJkVGl0bGVJbnB1dCIsImNhcmRVcmxJbnB1dCIsInBvcHVwTW9kYWwiLCJwb3B1cEltYWdlIiwicG9wdXBUaXRsZSIsInBvcHVwSW1hZ2VNb2RhbENsb3NlIiwiY2FyZERhdGEiLCJwb3B1cFdpdGhJbWFnZSIsInJlbmRlckNhcmQiLCJjYXJkIiwic2VjdGlvbiIsImFkZEl0ZW0iLCJwcm9maWxlRWRpdE1vZGFsRm9ybVZhbGlkYXRvciIsImNhcmRGb3JtRm9ybVZhbGlkYXRvciIsImNhcmRQb3B1cCIsInJlc2V0IiwiZWRpdFBvcHVwIiwidXNlckluZm8iLCJzZXRVc2VySW5mbyIsImRlc2NyaXB0aW9uIiwidXNlciIsImdldFVzZXJJbmZvIiwiX3BvcHVwSW1hZ2UiLCJfcG9wdXBUaXRsZSIsImNvbnRhaW5lclNlbGVjdG9yIiwiaXRlbXMiLCJyZW5kZXJlciIsIl9pdGVtcyIsIl9yZW5kZXJlciIsIl9jb250YWluZXIiLCJyZW5kZXJJdGVtcyIsImVsZW1lbnQiLCJwcmVwZW5kIiwiX3RpdGxlRWxlbWVudCIsIl9kZXNjcmlwdGlvbkVsZW1lbnQiXSwic291cmNlUm9vdCI6IiJ9